#include "EXRAILMacros.h"

HAL(PCF8575, 300, 16, {I2CMux_1,SubBus_0,0x20})
HAL(PCF8575, 320, 16, {I2CMux_1,SubBus_1,0x23})
HAL(PCA9685, 350, 16, {I2CMux_1,SubBus_7,0x43})
HAL(PCA9685, 370, 16, {I2CMux_1,SubBus_2,0x44})
// HAL(PCA9685, 390, 16, {I2CMux_1,SubBus_3,0x45})

ROSTER(5,"A4 William Whitehall","///F3 Shunting")
ROSTER(6,"DB Schenker Class 08","///F3 Shunting")
ROSTER(7,"Duchess of Montrose",
  "/F1 Background/*F2 Whistle 1/*F3 Whistle 2/*F4 Brake/F5 Cylinder Cock/*F6 Wheel Slip/F7 Coal Shoveling/F8 Injector/F9 Safety Valve/*F10 Guards Whistle/*F11 Coupling/*F12 Carrage Brake Squeal/F13 Flange Squeal/F14 Blower/*F15 Slam Doors/F16 Firemans Breakfast/F17 Blowdown/*F18 Coal Pusher/F19 Water Fill/F20 Chuffing Coasting/////F25 Shunting Mode/F26 Creep Mode/F27 Apply Brake/F28 Auto Function Play"
)

ALIAS(SEQUENCE_RIGHT_LED)
ALIAS(SEQUENCE_STARTUP)


// This is the startup sequence, 
AUTOSTART
  START(SEQUENCE_STARTUP)    
DONE 

// point alias pins
ALIAS(PT_FR_CROSS_OUTER_PIN    , 100)
ALIAS(PT_FR_REVERSE_LOOP_PIN   , 101)
ALIAS(PT_FR_LOOP_PIN           , 102)
ALIAS(PT_ENGINE_SHED_PIN       , 103)
ALIAS(PT_YARD_PIN              , 104)
ALIAS(PT_FR_CROSS_INNER_PIN    , 105)
ALIAS(PT_FL_CROSS_OUTER_PIN    , 120)
ALIAS(PT_FL_LOOP_PIN           , 121)
ALIAS(PT_BL_CROSS_OUTER_PIN    , 122)
ALIAS(PT_BL_REVERSE_LOOP_PIN   , 123)
ALIAS(PT_GOODS_OR_PASSENGER_PIN, 124)
ALIAS(PT_PASSENGER_SIDINGS_PIN , 125)
ALIAS(PT_GOODS_SHED_PIN        , 126)
ALIAS(PT_GOODS_SIDINGS_PIN     , 127)
ALIAS(PT_FL_CROSS_INNER_PIN    , 128)
ALIAS(PT_BL_CROSS_INNER_PIN    , 129)

// point alias
ALIAS(PT_FR_CROSS_OUTER)
ALIAS(PT_FR_REVERSE_LOOP)
ALIAS(PT_FR_LOOP)
ALIAS(PT_ENGINE_SHED)
ALIAS(PT_YARD)
ALIAS(PT_FR_CROSS_INNER)
ALIAS(PT_FL_CROSS_OUTER)
ALIAS(PT_FL_LOOP)
ALIAS(PT_BL_CROSS_OUTER)
ALIAS(PT_BL_REVERSE_LOOP)
ALIAS(PT_GOODS_OR_PASSENGER)
ALIAS(PT_PASSENGER_SIDINGS)
ALIAS(PT_GOODS_SHED)
ALIAS(PT_GOODS_SIDINGS)
ALIAS(PT_FL_CROSS_INNER)
ALIAS(PT_BL_CROSS_INNER)
ALIAS(PT_FRONT_RIGHT_CROSSOVER)
ALIAS(PT_FRONT_LEFT_CROSSOVER)
ALIAS(PT_BACK_LEFT_CROSSOVER)

// uncoupler alias pins
ALIAS(UC_FRONT_RIGHT_OUTER_UNCOUPLER_PIN, 108)
ALIAS(UC_FRONT_RIGHT_INNER_UNCOUPLER_PIN, 109)


// uncoupler alias
ALIAS(UC_FRONT_RIGHT_OUTER_UNCOUPLER)
ALIAS(UC_FRONT_RIGHT_INNER_UNCOUPLER)


//button alias
ALIAS(BN_KILL                    , 300)
ALIAS(BN_PT_BACK_LEFT_CROSSOVER  , 301)
ALIAS(BN_PT_BL_REVERSE_LOOP      , 302)
ALIAS(BN_UNCOUPLE_BACK_SIDING    , 303)
ALIAS(BN_UNCOUPLE_GOODS_SHED     , 304)
ALIAS(BN_BL_GOODS_SIDINGS        , 305)
ALIAS(BN_UNCOUPLE_FRONT_SIDING   , 306)
ALIAS(BN_PT_FL_LOOP              , 307)
ALIAS(BN_PT_FRONT_LEFT_CROSSOVER , 308)
ALIAS(BN_UNCOUPLE_FRONT_LEFT     , 309)
ALIAS(BN_UNCOUPLE_INNER_LEFT     , 310)
ALIAS(BN_UNCOUPLE_LEFT_LOOP      , 311)
ALIAS(BN_PT_GOODS_SHED           , 312)
ALIAS(BN_UNCOUPLE_LEFT_PASSENGER , 313)
ALIAS(BN_UNCOUPLE_RIGHT_PASSENGER, 314)
ALIAS(BN_PT_PASSENGER_SIDINGS    , 315)


ALIAS(BN_PT_GOODS_OR_PASSENGER   , 320)
ALIAS(BN_PT_YARD                 , 321)
ALIAS(BN_UNCOUPLE_RIGHT_LOOP     , 322)
ALIAS(BN_UNCOUPLE_INNER_RIGHT    , 323)
ALIAS(BN_PT_ENGINE_SHED          , 324)
ALIAS(BN_PT_FR_LOOP              , 325)
ALIAS(BN_UNCOUPLE_OUTER_RIGHT    , 326)
ALIAS(BN_PT_FRONT_RIGHT_CROSSOVER, 327)
ALIAS(BN_PT_FR_REVERSE_LOOP      , 328)



ALIAS(SENSOR_RIGHT_OUTER_CURVE, 223)
ALIAS(SENSOR_RIGHT_INNER_CURVE, 224)
ALIAS(SENSOR_REVERSE_LOOP     , 208)

// points
// "Front Right Crossover Outer"
SERVO_TURNOUT(PT_FR_CROSS_OUTER    , PT_FR_CROSS_OUTER_PIN    , 300, 350, Instant, HIDDEN)
SERVO_TURNOUT(PT_FR_REVERSE_LOOP   , PT_FR_REVERSE_LOOP_PIN   , 300, 360, Instant, "Front Right Reverse Loop")
SERVO_TURNOUT(PT_FR_LOOP           , PT_FR_LOOP_PIN           , 280, 320, Instant, "Front Right Loop")
SERVO_TURNOUT(PT_ENGINE_SHED       , PT_ENGINE_SHED_PIN       , 350, 300, Instant, "To Engine Shed")
SERVO_TURNOUT(PT_YARD              , PT_YARD_PIN              , 300, 360, Instant, "To Yard")
// "Front Right Crossover Inner"   ,                          ,    ,    ,        ,
SERVO_TURNOUT(PT_FR_CROSS_INNER    , PT_FR_CROSS_INNER_PIN    , 260, 310, Instant, HIDDEN)
                                   
// "Front Left Crossover Outer"    
SERVO_TURNOUT(PT_FL_CROSS_OUTER    , PT_FL_CROSS_OUTER_PIN    , 375, 300, Instant, HIDDEN)
SERVO_TURNOUT(PT_FL_LOOP           , PT_FL_LOOP_PIN           , 360, 300, Instant, "Front Left Loop")
// "Back Left Crossover Outer"     
SERVO_TURNOUT(PT_BL_CROSS_OUTER    , PT_BL_CROSS_OUTER_PIN    , 230, 300, Instant, HIDDEN)
SERVO_TURNOUT(PT_BL_REVERSE_LOOP   , PT_BL_REVERSE_LOOP_PIN   , 230, 300, Instant, "Back Left Reverse Loop")

SERVO_TURNOUT(PT_GOODS_OR_PASSENGER, PT_GOODS_OR_PASSENGER_PIN, 250, 300, Instant, "Goods or Passenger")
SERVO_TURNOUT(PT_PASSENGER_SIDINGS , PT_PASSENGER_SIDINGS_PIN , 260, 320, Instant, "Passenger Sidings")
SERVO_TURNOUT(PT_GOODS_SHED        , PT_GOODS_SHED_PIN        , 250, 300, Instant, "Goods Shed")
SERVO_TURNOUT(PT_GOODS_SIDINGS     , PT_GOODS_SIDINGS_PIN     , 250, 300, Instant, "Goods Sidings")

// "Front Left Crossover Inner"   
SERVO_TURNOUT(PT_FL_CROSS_INNER    , PT_FL_CROSS_INNER_PIN    , 260, 310, Instant, HIDDEN)
// "Back Left Crossover Inner"
SERVO_TURNOUT(PT_BL_CROSS_INNER    , PT_BL_CROSS_INNER_PIN    , 260, 310, Instant, HIDDEN)

VIRTUAL_TURNOUT(PT_FRONT_RIGHT_CROSSOVER, "Front Right Crossover")
VIRTUAL_TURNOUT(PT_FRONT_LEFT_CROSSOVER , "Front Left Crossover")
VIRTUAL_TURNOUT(PT_BACK_LEFT_CROSSOVER  , "Back Left Crossover")


// UNCOUPLERS, are defined as servo_turnouts
SERVO_TURNOUT(UC_FRONT_RIGHT_OUTER_UNCOUPLER, UC_FRONT_RIGHT_OUTER_UNCOUPLER_PIN, 260, 300, Instant, "Front Right Outer Uncoupler")
SERVO_TURNOUT(UC_FRONT_RIGHT_INNER_UNCOUPLER, UC_FRONT_RIGHT_INNER_UNCOUPLER_PIN, 250, 300, Instant, "Front Right Inner Uncoupler")

ALIAS(LED_FRONT_RIGHT_CROSSOVER_CROSSED, 350)
ALIAS(LED_FRONT_RIGHT_CROSSOVER_INNER  , 351)
ALIAS(LED_FRONT_RIGHT_CROSSOVER_OUTER  , 352)
ALIAS(LED_FRONT_RIGHT_REVERSE_LOOP     , 353)
ALIAS(LED_FRONT_RIGHT_LOOP             , 354)
ALIAS(LED_FRONT_RIGHT_LOOP_INNER       , 355)
ALIAS(LED_ENGINE                       , 356)
ALIAS(LED_ENGINE_YARD                  , 357)
ALIAS(LED_YARD                         , 358)
ALIAS(LED_RIGHT_LOOP                   , 359)
                                       
ALIAS(LED_OCCUPIED_RIGHT_CURVE_OUTER   , 360)
ALIAS(LED_OCCUPIED_RIGHT_CURVE_INNER   , 361)
ALIAS(LED_OCCUPIED_REVERSE_LOOP        , 362)
                                       
ALIAS(LED_UNCOUPLE_FRONT_RIGHT_OUTER   , 363)
ALIAS(LED_UNCOUPLE_FRONT_RIGHT_INNER   , 364)


// LEDs on mimic
CONFIGURE_SERVO(LED_FRONT_RIGHT_CROSSOVER_CROSSED, 4095, 0, PCA9685::NoPowerOff | PCA9685::Fast)
CONFIGURE_SERVO(LED_FRONT_RIGHT_CROSSOVER_INNER  , 4095, 0, PCA9685::NoPowerOff | PCA9685::Fast)
CONFIGURE_SERVO(LED_FRONT_RIGHT_CROSSOVER_OUTER  , 4095, 0, PCA9685::NoPowerOff | PCA9685::Fast)
CONFIGURE_SERVO(LED_FRONT_RIGHT_REVERSE_LOOP     , 4095, 0, PCA9685::NoPowerOff | PCA9685::Fast)
CONFIGURE_SERVO(LED_FRONT_RIGHT_LOOP             , 4095, 0, PCA9685::NoPowerOff | PCA9685::Fast)
CONFIGURE_SERVO(LED_FRONT_RIGHT_LOOP_INNER       , 4095, 0, PCA9685::NoPowerOff | PCA9685::Fast)
CONFIGURE_SERVO(LED_ENGINE                       , 4095, 0, PCA9685::NoPowerOff | PCA9685::Fast)
CONFIGURE_SERVO(LED_ENGINE_YARD                  , 4095, 0, PCA9685::NoPowerOff | PCA9685::Fast)
CONFIGURE_SERVO(LED_YARD                         , 4095, 0, PCA9685::NoPowerOff | PCA9685::Fast)
CONFIGURE_SERVO(LED_RIGHT_LOOP                   , 4095, 0, PCA9685::NoPowerOff | PCA9685::Fast)

CONFIGURE_SERVO(LED_OCCUPIED_RIGHT_CURVE_OUTER   , 4095, 0, PCA9685::NoPowerOff | PCA9685::Fast)
CONFIGURE_SERVO(LED_OCCUPIED_RIGHT_CURVE_INNER   , 4095, 0, PCA9685::NoPowerOff | PCA9685::Fast)
CONFIGURE_SERVO(LED_OCCUPIED_REVERSE_LOOP        , 4095, 0, PCA9685::NoPowerOff | PCA9685::Fast)

CONFIGURE_SERVO(LED_UNCOUPLE_FRONT_RIGHT_OUTER   , 4095, 0, PCA9685::NoPowerOff | PCA9685::Fast)
CONFIGURE_SERVO(LED_UNCOUPLE_FRONT_RIGHT_INNER   , 4095, 0, PCA9685::NoPowerOff | PCA9685::Fast)




ONTHROW(PT_FRONT_RIGHT_CROSSOVER)
  THROW(PT_FR_CROSS_OUTER)
  THROW(PT_FR_CROSS_INNER)
  START(SEQUENCE_RIGHT_LED)
DONE

ONCLOSE(PT_FRONT_RIGHT_CROSSOVER)
  CLOSE(PT_FR_CROSS_OUTER)
  CLOSE(PT_FR_CROSS_INNER)
  START(SEQUENCE_RIGHT_LED)
DONE

ONTHROW(PT_FRONT_LEFT_CROSSOVER)
  THROW(PT_FL_CROSS_OUTER)
  THROW(PT_FL_CROSS_INNER)
DONE

ONCLOSE(PT_FRONT_LEFT_CROSSOVER)
  CLOSE(PT_FL_CROSS_OUTER)
  CLOSE(PT_FL_CROSS_INNER)
DONE

ONTHROW(PT_BACK_LEFT_CROSSOVER)
  THROW(PT_BL_CROSS_OUTER)
  THROW(PT_BL_CROSS_INNER)
DONE

ONCLOSE(PT_BACK_LEFT_CROSSOVER)
  CLOSE(PT_BL_CROSS_OUTER)
  CLOSE(PT_BL_CROSS_INNER)
DONE


ONTHROW(PT_FR_REVERSE_LOOP)
  START(SEQUENCE_RIGHT_LED)
DONE

ONCLOSE(PT_FR_REVERSE_LOOP)
  START(SEQUENCE_RIGHT_LED)
DONE

ONTHROW(PT_FR_LOOP)
  SET(LED_FRONT_RIGHT_LOOP)
  RESET(LED_FRONT_RIGHT_LOOP_INNER)
DONE

ONCLOSE(PT_FR_LOOP)
  SET(LED_FRONT_RIGHT_LOOP_INNER)
  RESET(LED_FRONT_RIGHT_LOOP)
DONE

ONTHROW(PT_ENGINE_SHED)
  SET(LED_ENGINE)
  RESET(LED_ENGINE_YARD)
DONE

ONCLOSE(PT_ENGINE_SHED)
  SET(LED_ENGINE_YARD)
  RESET(LED_ENGINE)
DONE

ONTHROW(PT_YARD)
  SET(LED_YARD)
  RESET(LED_RIGHT_LOOP)
DONE

ONCLOSE(PT_YARD)
  SET(LED_RIGHT_LOOP)
  RESET(LED_YARD)
DONE

ONTHROW(UC_FRONT_RIGHT_OUTER_UNCOUPLER)
  PRINT("THROW UNCOUPLE FRONT RIGHT OUTER")
  SET(LED_UNCOUPLE_FRONT_RIGHT_OUTER)
DONE

ONCLOSE(UC_FRONT_RIGHT_OUTER_UNCOUPLER)
  PRINT("CLOSE UNCOUPLE FRONT RIGHT OUTER")
  RESET(LED_UNCOUPLE_FRONT_RIGHT_OUTER)
DONE

ONTHROW(UC_FRONT_RIGHT_INNER_UNCOUPLER)
  PRINT("THROW UNCOUPLE FRONT RIGHT INNER")
  SET(LED_UNCOUPLE_FRONT_RIGHT_INNER)
DONE

ONCLOSE(UC_FRONT_RIGHT_INNER_UNCOUPLER)
  PRINT("CLOSE UNCOUPLE FRONT RIGHT INNER")
  RESET(LED_UNCOUPLE_FRONT_RIGHT_INNER)
DONE


// Kill!!
ONBUTTON(BN_KILL)
  POWEROFF
  KILLALL
DONE

// back left crossover
ONBUTTON(BN_PT_BACK_LEFT_CROSSOVER)
  PRINT("TOGGLE TURNOUT BACK LEFT CROSSOVER")
  TOGGLE_TURNOUT(PT_BACK_LEFT_CROSSOVER)
DONE

// back left reverse loop
ONBUTTON(BN_PT_BL_REVERSE_LOOP)
  PRINT("TOGGLE TURNOUT BACK LEFT REVERSE LOOP")
  TOGGLE_TURNOUT(PT_BL_REVERSE_LOOP)
DONE

// goods sidings
ONBUTTON(BN_BL_GOODS_SIDINGS)
  PRINT("TOGGLE TURNOUT GOODS SIDINGS")
  TOGGLE_TURNOUT(PT_GOODS_SIDINGS)
DONE

// front left loop
ONBUTTON(BN_PT_FL_LOOP)
  PRINT("TOGGLE TURNOUT FRONT LEFT LOOP")
  TOGGLE_TURNOUT(PT_FL_LOOP)
DONE

// front left crossover
ONBUTTON(BN_PT_FRONT_LEFT_CROSSOVER)
  PRINT("TOGGLE TURNOUT FRONT LEFT CROSSOVER")
  TOGGLE_TURNOUT(PT_FRONT_LEFT_CROSSOVER)
DONE


// goods shed
ONBUTTON(BN_PT_GOODS_SHED)
  PRINT("TOGGLE TURNOUT GOODS SHED")
  TOGGLE_TURNOUT(PT_GOODS_SHED)
DONE


// passenger sidings
ONBUTTON(BN_PT_PASSENGER_SIDINGS)
  PRINT("TOGGLE TURNOUT PASSENGER SIDINGS")
  TOGGLE_TURNOUT(PT_PASSENGER_SIDINGS)
DONE


ONBUTTON(BN_PT_GOODS_OR_PASSENGER)
  PRINT("TOGGLE TURNOUT GOODS OR PASSENGER")
  TOGGLE_TURNOUT(PT_GOODS_OR_PASSENGER)
DONE

ONBUTTON(BN_PT_YARD)
  PRINT("TOGGLE TURNOUT YARD")
  TOGGLE_TURNOUT(PT_YARD)
DONE

ONBUTTON(BN_PT_ENGINE_SHED)
  PRINT("TOGGLE TURNOUT ENGINE SHED")
  TOGGLE_TURNOUT(PT_ENGINE_SHED)
DONE

ONBUTTON(BN_PT_FR_LOOP)
  PRINT("TOGGLE TURNOUT FRONT RIGHT LOOP")
  TOGGLE_TURNOUT(PT_FR_LOOP)
DONE

ONBUTTON(BN_PT_FRONT_RIGHT_CROSSOVER)
  PRINT("TOGGLE TURNOUT FRONT RIGHT CROSSOVER")
  TOGGLE_TURNOUT(PT_FRONT_RIGHT_CROSSOVER)
DONE

ONBUTTON(BN_PT_FR_REVERSE_LOOP)
  PRINT("TOGGLE TURNOUT FRONT RIGHT REVERSE LOOP")
  TOGGLE_TURNOUT(PT_FR_REVERSE_LOOP)
DONE

ONBUTTON(BN_UNCOUPLE_OUTER_RIGHT)
  PRINT("TOGGLE UNCOUPLE OUTER RIGHT")
  TOGGLE_TURNOUT(UC_FRONT_RIGHT_OUTER_UNCOUPLER)
DONE

ONBUTTON(BN_UNCOUPLE_INNER_RIGHT)
  PRINT("TOGGLE UNCOUPLE INNER RIGHT")
  TOGGLE_TURNOUT(UC_FRONT_RIGHT_INNER_UNCOUPLER)
DONE

ONSENSOR(-SENSOR_RIGHT_OUTER_CURVE)
  IF(-SENSOR_RIGHT_OUTER_CURVE)
    PRINT("SENSOR OCCUPIED RIGHT CURVE OUTER")
    SET(LED_OCCUPIED_RIGHT_CURVE_OUTER)
  ELSE
    PRINT("SENSOR UNOCCUPIED RIGHT CURVE OUTER")
    RESET(LED_OCCUPIED_RIGHT_CURVE_OUTER)
  ENDIF
DONE

ONSENSOR(-SENSOR_RIGHT_INNER_CURVE)
  IF(-SENSOR_RIGHT_INNER_CURVE)
    PRINT("SENSOR OCCUPIED RIGHT CURVE INNER")
    SET(LED_OCCUPIED_RIGHT_CURVE_INNER)
  ELSE
    PRINT("SENSOR UNOCCUPIED RIGHT CURVE INNER")
    RESET(LED_OCCUPIED_RIGHT_CURVE_INNER)
  ENDIF
DONE

ONSENSOR(-SENSOR_REVERSE_LOOP)
  IF(-SENSOR_REVERSE_LOOP)
    PRINT("SENSOR OCCUPIED REVERSE LOOP")
    SET(LED_OCCUPIED_REVERSE_LOOP)
  ELSE
    PRINT("SENSOR UNOCCUPIED REVERSE LOOP")
    RESET(LED_OCCUPIED_REVERSE_LOOP)
  ENDIF
DONE

SEQUENCE(SEQUENCE_STARTUP)
  SET(LED_FRONT_RIGHT_CROSSOVER_INNER)
  SET(LED_FRONT_RIGHT_CROSSOVER_OUTER)
  SET(LED_FRONT_RIGHT_LOOP_INNER)
  SET(LED_ENGINE_YARD)
  SET(LED_RIGHT_LOOP)

  POWERON
DONE

SEQUENCE(SEQUENCE_RIGHT_LED)
  IFTHROWN(PT_FRONT_RIGHT_CROSSOVER)
    PRINT("SET LED FRONT RIGHT CROSSOVER CROSSED")

    SET(LED_FRONT_RIGHT_CROSSOVER_CROSSED)
    RESET(LED_FRONT_RIGHT_CROSSOVER_INNER)
    RESET(LED_FRONT_RIGHT_CROSSOVER_OUTER)
  ELSE 
    IFCLOSED(PT_FRONT_RIGHT_CROSSOVER)
      PRINT("SET LED FRONT RIGHT CROSSOVER STRAIGHT")
      RESET(LED_FRONT_RIGHT_CROSSOVER_CROSSED)
      SET(LED_FRONT_RIGHT_CROSSOVER_INNER)
      SET(LED_FRONT_RIGHT_CROSSOVER_OUTER)
    ENDIF
  ENDIF

  IFTHROWN(PT_FR_REVERSE_LOOP)
    PRINT("SET LED FRONT RIGHT REVERSE LOOP")

    SET(LED_FRONT_RIGHT_REVERSE_LOOP)
  ELSE 
    IFCLOSED(PT_FR_REVERSE_LOOP)
      PRINT("RESET LED FRONT RIGHT REVERSE LOOP")
      RESET(LED_FRONT_RIGHT_REVERSE_LOOP)
    ENDIF
  ENDIF
DONE

